/* This file has been automatically generated by RPC-Generator
   https://github.com/Crystal-Photonics/RPC-Generator
   You should not modify this file manually. */

#ifdef __cplusplus
extern "C" {
#endif


/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   IMPORTANT: The following 3 functions must be implemented by YOU.
   They are required for the RPC to work.
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   
void RPC_push_byte(unsigned char byte);
/* Pushes a byte to be sent via network. You should put all the pushed bytes
   into a buffer and send the buffer when RPC_commit is called. If you run
   out of buffer you can send a partial message. */

void RPC_commit();
/* This function is called when a complete message has been pushed using
   RPC_push_byte. Now is a good time to send the buffer over the network,
   even if the buffer is not full. RPC_commit should block until you are
   fairly certain that the message has arrived on the other side. */

void RPC_start_message();
/*  This function is called when a new message starts. It can be used to
    free or allocate buffers and write preambles. The implementation can be
    empty */

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   The following functions are automatically generated.
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

/* Return values used by some RPC functions */
typedef enum{RPC_SUCCESS, RPC_FAILURE, RPC_COMMAND_UNKNOWN, RPC_COMMAND_INCOMPLETE} RPC_RESULT;


void RPC_parse();
/* This function parses RPC-Requests, calls the original function and sends an
   answer. */

#ifdef __cplusplus
}
#endif
